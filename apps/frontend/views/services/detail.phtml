<?php
/**
 * @var $lang_url;
 * @var $lang_code;
 * @var $lang_url_slashed;
 * @var $parent_keyword;
 * @var $keyword;
 * @var \Bincg\Models\BinArticle[] $articles
 */
?>
<?php if(!$isMobile){ ?>
<div class="breadcrumbs">
    <div class="container">
        <a href="<?php echo $this->url->get($lang_url); ?>" target="_self" title="<?php echo htmlentities(defined('txt_menu_home') ? txt_menu_home : ''); ?>">
            <?php echo defined('txt_menu_home') ? txt_menu_home : '' ?>
        </a>
        <a href="<?php echo $this->url->get($lang_url.'/'.$parent_keyword); ?>" target="_self" title="<?php echo isset($parent_bread) ? strip_tags($parent_bread) : '' ?>">
            <?php echo isset($parent_bread) ? $parent_bread : '' ?>
        </a>
        <a href="<?php echo $this->url->get($lang_url.'/'.$parent_keyword.'/'.$keyword); ?>" target="_self" title="<?php echo isset($menu_bread) ? strip_tags($menu_bread) : '' ?>">
            <?php echo isset($menu_bread) ? $menu_bread : '' ?>
        </a>
    </div>
</div>
<?php } ?>
<?php $this->view->partial('shared/layoutbanner'); ?>
<?php echo isset($ar_content) ? $ar_content : '' ?>

<script>
    commands.push(function () {

        "use strict"; document.addEventListener('DOMContentLoaded',
            function () {
                if (window.hideYTActivated) return; let
                    onYouTubeIframeAPIReadyCallbacks = []; for (let playerWrap of
                    document.querySelectorAll(".hytPlayerWrap")) {
                    let playerFrame =
                        playerWrap.querySelector("iframe"); let tag = document.createElement('script');
                    tag.src = "https://www.youtube.com/iframe_api"; let firstScriptTag =
                        document.getElementsByTagName('script')[0];
                    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); let onPlayerStateChange
                        = function (event) {
                        if (event.data == YT.PlayerState.ENDED) {
                            playerWrap.classList.add("ended");
                        } else if (event.data == YT.PlayerState.PAUSED) {
                            playerWrap.classList.add("paused");
                        } else if (event.data == YT.PlayerState.PLAYING) { playerWrap.classList.remove("ended"); playerWrap.classList.remove("paused"); }
                    };
                    let player; onYouTubeIframeAPIReadyCallbacks.push(function () {
                        player = new
                        YT.Player(playerFrame, { events: { 'onStateChange': onPlayerStateChange } });
                    });
                    playerWrap.addEventListener("click", function () {
                        let playerState =
                            player.getPlayerState(); if (playerState == YT.PlayerState.ENDED) {
                            player.seekTo(0);
                        } else if (playerState == YT.PlayerState.PAUSED) {
                            player.playVideo();
                        }
                    });
                } window.onYouTubeIframeAPIReady = function () {
                    for (let
                        callback of onYouTubeIframeAPIReadyCallbacks) { callback(); }
                };
                window.hideYTActivated = true;
            });
    })
</script>
